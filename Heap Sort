
public class Solution 
{
	static void maxhapify(int arr[],int n,int i)
	{
		int largest =i;
		int l = 2*i+1;
		int r = 2*i+2;
		while(l<n && arr[l]>arr[largest])
		{
			largest = l;
		}
		while(r<n && arr[r]>arr[largest])
		{
			largest = r;
		}
		if(largest!=i)
		{
			int temp = arr[largest];
			arr[largest]=arr[i];
			arr[i]=temp;
			maxhapify(arr,n,largest);
		}
	}
	static void builtmaxheap(int arr[],int n)
	{
		for(int i=n/2-1;i>=0;i--)
		{
			maxhapify(arr,n-1,i);
		}
		for(int i=n-1;i>0;i--)
		{
			int temp = arr[0];
			arr[0]=arr[i];
			arr[i]=temp;
			maxhapify(arr,i,0);
		}
	}
	static void print(int arr[],int n)
	{
		for(int i=0;i<n;++i)
		{
			System.out.println(arr[i]);
		}
	}
	public static void main(String[] args) 
	{
		int arr[] = {7,6,5,4,3,2,1};
		builtmaxheap(arr,arr.length);
		print(arr,arr.length);
	}
}
