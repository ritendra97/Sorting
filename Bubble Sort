Worst and Average Case Time Complexity: O(n*n). Worst case occurs when array is reverse sorted.
Best Case Time Complexity: O(n). Best case occurs when array is already sorted.
Auxiliary Space: O(1)

public class Practice {

	public static void BubbleSort(int arr[]) {
		
		int n = arr.length;
		boolean swapped=false;
		 for(int i=0;i<n;i++) {
			 swapped = false;
			 for(int j=0;j<n-i-1;j++) {
				 if(arr[j]<arr[j+1]) {
					 int temp = arr[j];
					 arr[j] = arr[j+1];
					 arr[j+1] = temp;
					 swapped =true;
				 }
				 
			 }
			 if(swapped==false)
				 break;
		 }
		 
		 for(int a: arr) {
			 System.out.println(a+" ");
		 }
	}
	
	public static void main(String[] args) {
       int arr[] = {64, 34, 25, 12, 22, 11, 90};
       BubbleSort(arr);
    }
}
