public class Sort 
{
	static void sort(int A[],int L[],int R[],int leftcount,int rightcount)
	{
		int i=0;int j=0; int k=0;
	     while(i<leftcount && j<rightcount)
	     {
	    	 if(L[i]<R[j])
	    		 A[k++]=L[i++];
	    	 else
	    		 A[k++]=R[j++];
	     }
	     while(i<leftcount)
	     {
	    	 A[k++]=L[i++];
	     }
	     while(j<rightcount)
	     {
	    	 A[k++]=R[j++];
	     }
	}
	static void mergesort(int A[],int n)
	{
		if(n<2)
		  return;
		int mid = n/2;
		int L[]=new int[mid];
		int R[]=new int[n-mid];
		for(int i=0;i<mid;i++)
		{
			L[i]=A[i];
		}
		for(int i=mid;i<n;i++)
		{
			R[i-mid]=A[i];
		}
		mergesort(L,mid);
		mergesort(R,n-mid);
		sort(A,L,R,mid,n-mid);
	}
	static void print(int A[],int n)
	{
		for(int i=0;i<n;i++)
		{
			System.out.println(A[i]);
		}
	}
	public static void main(String[] args) 
	{
		int A[]= {9,5,3,7,9,2,5};
		mergesort(A,A.length);
		print(A,A.length);
	}
}
